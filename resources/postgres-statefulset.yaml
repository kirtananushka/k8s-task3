---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: resource-svc-db
  namespace: ktask
spec:
  serviceName: resource-svc-db
  replicas: 1
  selector:
    matchLabels:
      app: resource-svc-db
  template:
    metadata:
      labels:
        app: resource-svc-db
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine3.18
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: resource-svc-db-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: resource-svc-db-storage
              mountPath: /var/lib/postgresql/data
            - name: initdb-resource-svc-db
              mountPath: /docker-entrypoint-initdb.d/init-resource-svc-db.sql
              subPath: init-resource-svc-db.sql
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
            initialDelaySeconds: 25
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
            initialDelaySeconds: 25
            periodSeconds: 10
          startupProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
            initialDelaySeconds: 20
            periodSeconds: 5
            failureThreshold: 10
      volumes:
        - name: initdb-resource-svc-db
          configMap:
            name: resource-svc-db-init-config
            defaultMode: 0744
  volumeClaimTemplates:
    - metadata:
        name: resource-svc-db-storage
      spec:
        storageClassName: hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Mi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: song-svc-db
  namespace: ktask
spec:
  serviceName: song-svc-db
  replicas: 1
  selector:
    matchLabels:
      app: song-svc-db
  template:
    metadata:
      labels:
        app: song-svc-db
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine3.18
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: song-svc-db-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: song-svc-db-storage
              mountPath: /var/lib/postgresql/data
            - name: initdb-song-svc-db
              mountPath: /docker-entrypoint-initdb.d/init-song-svc-db.sql
              subPath: init-song-svc-db.sql
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
            initialDelaySeconds: 25
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
            initialDelaySeconds: 25
            periodSeconds: 10
          startupProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
            initialDelaySeconds: 20
            periodSeconds: 5
            failureThreshold: 10
      volumes:
        - name: initdb-song-svc-db
          configMap:
            name: song-svc-db-init-config
            defaultMode: 0744
  volumeClaimTemplates:
    - metadata:
        name: song-svc-db-storage
      spec:
        storageClassName: hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Mi
